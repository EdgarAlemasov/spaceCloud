# Generated by Django 4.2.4 on 2023-09-05 18:35

import cloud.models
import cloud.utils
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='FileShare',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='Time creating')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='Updating time')),
                ('comments', models.TextField(blank=True, verbose_name='Comments')),
                ('secret_key', models.CharField(db_index=True, max_length=10, verbose_name='share key')),
                ('signature', models.CharField(max_length=70, verbose_name='e-signature')),
                ('expire_time', models.DateTimeField(verbose_name='best before date')),
                ('summary', models.CharField(blank=True, max_length=100, verbose_name='share other description')),
                ('update_by', models.ForeignKey(blank=True, null=True, on_delete=models.SET(cloud.models.get_delete_user), related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Changed')),
            ],
            options={
                'verbose_name': 'General file',
                'verbose_name_plural': 'General file',
                'ordering': ['-create_time'],
            },
        ),
        migrations.CreateModel(
            name='FileType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='Time creating')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='Updating time')),
                ('comments', models.TextField(blank=True, verbose_name='Comments')),
                ('type_name', models.CharField(max_length=50, verbose_name='type name')),
                ('suffix', models.CharField(blank=True, max_length=10, unique=True, verbose_name='suffix')),
                ('create_by', models.ForeignKey(blank=True, null=True, on_delete=models.SET(cloud.models.get_delete_user), related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Creator')),
                ('update_by', models.ForeignKey(blank=True, null=True, on_delete=models.SET(cloud.models.get_delete_user), related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Changed')),
            ],
            options={
                'verbose_name': 'File type',
                'verbose_name_plural': 'File type',
            },
        ),
        migrations.CreateModel(
            name='NameLimit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='Time creating')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='Updating time')),
                ('comments', models.TextField(blank=True, verbose_name='Comments')),
                ('name_limit', models.CharField(max_length=50, verbose_name='name restriction')),
                ('name_key', models.CharField(max_length=50, unique=True, verbose_name='symbols restriction')),
                ('create_by', models.ForeignKey(blank=True, null=True, on_delete=models.SET(cloud.models.get_delete_user), related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Creator')),
                ('update_by', models.ForeignKey(blank=True, null=True, on_delete=models.SET(cloud.models.get_delete_user), related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Changed')),
            ],
            options={
                'verbose_name': 'Conditions',
                'verbose_name_plural': 'Conditions',
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='Time creating')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='Updating time')),
                ('comments', models.TextField(blank=True, verbose_name='Comments')),
                ('role_name', models.CharField(max_length=50, verbose_name='Role_name')),
                ('role_key', models.CharField(max_length=50, unique=True, verbose_name='Role_key')),
                ('create_by', models.ForeignKey(blank=True, null=True, on_delete=models.SET(cloud.models.get_delete_user), related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Creator')),
                ('update_by', models.ForeignKey(blank=True, null=True, on_delete=models.SET(cloud.models.get_delete_user), related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Changed')),
            ],
            options={
                'verbose_name': 'Role',
                'verbose_name_plural': 'Role',
            },
        ),
        migrations.CreateModel(
            name='UserLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_name', models.CharField(max_length=128, verbose_name='user name')),
                ('ip_address', models.GenericIPAddressField(verbose_name='IP-address')),
                ('browser', models.CharField(max_length=200, verbose_name='browser')),
                ('os', models.CharField(max_length=30, verbose_name='os')),
                ('action', models.CharField(choices=[('0', 'sign in'), ('1', 'compose'), ('2', 'login error')], max_length=1, verbose_name='action')),
                ('msg', models.CharField(max_length=100, verbose_name='data')),
                ('action_time', models.DateTimeField(auto_now_add=True, verbose_name='time')),
            ],
            options={
                'verbose_name': 'user action journey',
                'verbose_name_plural': 'user action journey',
            },
        ),
        migrations.CreateModel(
            name='UserFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='Time creating')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='Updating time')),
                ('comments', models.TextField(blank=True, verbose_name='Comments')),
                ('file_name', models.CharField(max_length=100, verbose_name='file name')),
                ('file_uuid', models.UUIDField(default=cloud.utils.get_uuid, unique=True, verbose_name='file number')),
                ('file_cate', models.CharField(choices=[('0', 'document'), ('1', 'folder')], max_length=1, verbose_name='file classification')),
                ('file_size', models.BigIntegerField(default=0, verbose_name='file size')),
                ('file_path', models.CharField(db_index=True, max_length=500, verbose_name='file path')),
                ('delete_flag', models.CharField(choices=[('0', 'not assembled'), ('1', 'recycled')], default='0', max_length=1, verbose_name='logo')),
                ('create_by', models.ForeignKey(blank=True, null=True, on_delete=models.SET(cloud.models.get_delete_user), related_name='files', to=settings.AUTH_USER_MODEL, verbose_name='creator')),
                ('file_type', models.ForeignKey(blank=True, null=True, on_delete=models.SET(cloud.models.get_delete_file_type), to='cloud.filetype', verbose_name='file type')),
                ('folder', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cloud.userfile', to_field='file_uuid', verbose_name='improved catalog')),
                ('update_by', models.ForeignKey(blank=True, null=True, on_delete=models.SET(cloud.models.get_delete_user), related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Changed')),
            ],
            options={
                'verbose_name': 'user file',
                'verbose_name_plural': 'user file',
                'ordering': ['-create_time'],
            },
        ),
        migrations.CreateModel(
            name='ShareRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='Time creating')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='Updating time')),
                ('comments', models.TextField(blank=True, verbose_name='Comments')),
                ('anonymous', models.GenericIPAddressField(blank=True, null=True, verbose_name='anonymous user')),
                ('file_share', models.ForeignKey(on_delete=models.SET(cloud.models.get_delete_file_share), to='cloud.fileshare', verbose_name='General file')),
                ('recipient', models.ForeignKey(null=True, on_delete=models.SET(cloud.models.get_delete_user), to=settings.AUTH_USER_MODEL, verbose_name='recipient')),
                ('update_by', models.ForeignKey(blank=True, null=True, on_delete=models.SET(cloud.models.get_delete_user), related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Changed')),
            ],
            options={
                'verbose_name': 'time to get file',
                'verbose_name_plural': 'time to get file',
            },
        ),
        migrations.CreateModel(
            name='RoleLimit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='Time creating')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='Updating time')),
                ('comments', models.TextField(blank=True, verbose_name='Comments')),
                ('value', models.BigIntegerField(verbose_name='value')),
                ('create_by', models.ForeignKey(blank=True, null=True, on_delete=models.SET(cloud.models.get_delete_user), related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Creator')),
                ('limit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cloud.namelimit', verbose_name='restriction')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cloud.role', verbose_name='role')),
                ('update_by', models.ForeignKey(blank=True, null=True, on_delete=models.SET(cloud.models.get_delete_user), related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Changed')),
            ],
            options={
                'verbose_name': 'role restrictions',
                'verbose_name_plural': 'role restrictions',
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='Time creating')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='Updating time')),
                ('comments', models.TextField(blank=True, verbose_name='Comments')),
                ('profile_photo', models.ImageField(default='default/user.svg', upload_to=cloud.utils.get_unique_filename, verbose_name='profile photo')),
                ('gender', models.CharField(blank=True, choices=[('0', 'Female'), ('1', 'Male')], max_length=1, verbose_name='gender')),
                ('role', models.ForeignKey(on_delete=models.SET(cloud.models.get_delete_role), to='cloud.role', verbose_name='role')),
                ('update_by', models.ForeignKey(blank=True, null=True, on_delete=models.SET(cloud.models.get_delete_user), related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Changed')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'user profile',
                'verbose_name_plural': 'user profile',
            },
        ),
        migrations.CreateModel(
            name='Notice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='Time creating')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='Updating time')),
                ('comments', models.TextField(blank=True, verbose_name='Comments')),
                ('title', models.CharField(max_length=50, verbose_name='signature')),
                ('content', models.TextField(verbose_name='notice message')),
                ('create_by', models.ForeignKey(blank=True, null=True, on_delete=models.SET(cloud.models.get_delete_user), related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Creator')),
                ('update_by', models.ForeignKey(blank=True, null=True, on_delete=models.SET(cloud.models.get_delete_user), related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Changed')),
            ],
            options={
                'verbose_name': 'notice',
                'verbose_name_plural': 'notice',
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='Time creating')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='Updating time')),
                ('comments', models.TextField(blank=True, verbose_name='Comments')),
                ('action', models.CharField(choices=[('0', 'message'), ('1', 'statement')], max_length=1, verbose_name='type')),
                ('state', models.CharField(choices=[('0', 'unconfirmed'), ('1', 'accepted'), ('2', 'unsuccessful')], default='0', max_length=1, verbose_name='state')),
                ('content', models.TextField(verbose_name='text message')),
                ('create_by', models.ForeignKey(blank=True, null=True, on_delete=models.SET(cloud.models.get_delete_user), related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Creator')),
                ('update_by', models.ForeignKey(blank=True, null=True, on_delete=models.SET(cloud.models.get_delete_user), related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Changed')),
            ],
            options={
                'verbose_name': 'message',
                'verbose_name_plural': 'message',
            },
        ),
        migrations.AddField(
            model_name='fileshare',
            name='user_file',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cloud.userfile', verbose_name='document'),
        ),
        migrations.CreateModel(
            name='FileAgent',
            fields=[
            ],
            options={
                'verbose_name': 'file agent',
                'verbose_name_plural': 'file agent',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('cloud.userfile',),
        ),
        migrations.CreateModel(
            name='UserApproval',
            fields=[
            ],
            options={
                'verbose_name': 'user app',
                'verbose_name_plural': 'user app',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('cloud.message',),
            managers=[
                ('object', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='UserDir',
            fields=[
            ],
            options={
                'verbose_name': 'user folder',
                'verbose_name_plural': 'user folder',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('cloud.userfile',),
        ),
        migrations.CreateModel(
            name='UserMessage',
            fields=[
            ],
            options={
                'verbose_name': 'user message',
                'verbose_name_plural': 'user message',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('cloud.message',),
        ),
    ]
